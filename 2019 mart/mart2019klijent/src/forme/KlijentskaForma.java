/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Advokat;
import domen.Klijent;
import domen.Predmet;
import domen.VrstaPostupka;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.KomunikacijaSaServerom;
import modeli.ModelTabelePredmeti;
import operacije.Konstante;
import transferObjekat.KlijentskiZahtev;
import transferObjekat.ServerskiOdgovor;

/**
 *
 * @author Gogic
 */
public class KlijentskaForma extends javax.swing.JFrame {

    /**
     * Creates new form KlijentskaForma
     */
    public KlijentskaForma() {
        initComponents();
        ucitajKlijente();
        ucitajAdvokate();
        ucitajVrstePostupka();
        srediTabelu();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNazivPredmeta = new javax.swing.JTextField();
        cmbVrstaPostupka = new javax.swing.JComboBox();
        cmbKlijent = new javax.swing.JComboBox();
        cmbAdvokat = new javax.swing.JComboBox();
        txtDatum = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtProblem = new javax.swing.JTextArea();
        btnObrisi = new javax.swing.JButton();
        btnDodaj = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPredmeti = new javax.swing.JTable();
        btnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("[FON] Sud v1.0 - Klijentski program");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Unos predmeta"));

        jLabel1.setText("Advokat:");

        jLabel2.setText("Klijent:");

        jLabel3.setText("Vrsta postupka:");

        jLabel4.setText("Datum:");

        jLabel5.setText("Naziv predmeta:");

        jLabel6.setText("Problem:");

        cmbVrstaPostupka.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbKlijent.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbAdvokat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtProblem.setColumns(20);
        txtProblem.setRows(5);
        jScrollPane1.setViewportView(txtProblem);

        btnObrisi.setText("Obrisi izabrani predmet");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnDodaj.setText("Dodaj predmet");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        tblPredmeti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblPredmeti);

        btnSacuvaj.setText("Sacuvaj sve predmete");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbAdvokat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbKlijent, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbVrstaPostupka, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDatum)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(txtNazivPredmeta)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnDodaj)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnObrisi))
                            .addComponent(btnSacuvaj, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbAdvokat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbKlijent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbVrstaPostupka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNazivPredmeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnObrisi)
                    .addComponent(btnDodaj))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSacuvaj)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        Advokat a = (Advokat) cmbAdvokat.getSelectedItem();
        VrstaPostupka vp = (VrstaPostupka) cmbVrstaPostupka.getSelectedItem();
        if(txtDatum.getText().isEmpty() || txtNazivPredmeta.getText().isEmpty() || txtProblem.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Sva polja moraju biti popunjena!!!!");
         
        }
        else if(a.getSpecijalnostZaVrstuPostupka().getVrstaPostupkaID()!= vp.getVrstaPostupkaID()){
            JOptionPane.showMessageDialog(this, "ADVOKAT NIJE ZA TO SPECIJALIZOVAN");
        }
        
        else{
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        ModelTabelePredmeti mtp = (ModelTabelePredmeti) tblPredmeti.getModel();
        ArrayList<Predmet> listaPredmeta = mtp.getListaPredmeta();
        int brojPredmeta = 0;
            for (Predmet predmet : listaPredmeta) {
                if(predmet.getAdvokat().equals(a)){
                    brojPredmeta++;
                }
            }
        
        if(brojPredmeta > 2){
            JOptionPane.showMessageDialog(this, "Advokat ne moze imati vise od 3 predmeta");
            brojPredmeta = 0;
            return;
        }
        Predmet p = new Predmet();
        p.setKlijent((Klijent) cmbKlijent.getSelectedItem());
        p.setVrstaPostupka((VrstaPostupka) cmbVrstaPostupka.getSelectedItem());
        p.setAdvokat((Advokat) cmbAdvokat.getSelectedItem());
        try {
            p.setDatum(sdf.parse(txtDatum.getText()));
        } catch (ParseException ex) {
            System.out.println("Neuspesno upisivanje datuma");
            Logger.getLogger(KlijentskaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        p.setNaziv(txtNazivPredmeta.getText());
        p.setProblem(txtProblem.getText());
        
        
        mtp.dodajUTabelu(p);
        }
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int row = tblPredmeti.getSelectedRow();
        ModelTabelePredmeti mtp = (ModelTabelePredmeti) tblPredmeti.getModel();
        if(row != -1){
    
            mtp.obrisiIzTabele(row);
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
       ModelTabelePredmeti mtp = (ModelTabelePredmeti) tblPredmeti.getModel();
       ArrayList<Predmet> listaPredmeta = mtp.getListaPredmeta();
       
       if(listaPredmeta == null) return;
       
       KlijentskiZahtev kz = new KlijentskiZahtev(Konstante.SACUVAJ, listaPredmeta);
       KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);
       ServerskiOdgovor so = KomunikacijaSaServerom.getInstance().primiOdgovor();
       
       if(so.getPoruka().equalsIgnoreCase("uspesno")){
           JOptionPane.showConfirmDialog(this, "Uspesno su ubaceni predmeti u bazu!");
           mtp.ocistiTabelu();
       }else{
           JOptionPane.showMessageDialog(this, "Nisu uspesno uneti podaci u bazu! Greska: "+so.getPoruka());
           return;
       }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KlijentskaForma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cmbAdvokat;
    private javax.swing.JComboBox cmbKlijent;
    private javax.swing.JComboBox cmbVrstaPostupka;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblPredmeti;
    private javax.swing.JTextField txtDatum;
    private javax.swing.JTextField txtNazivPredmeta;
    private javax.swing.JTextArea txtProblem;
    // End of variables declaration//GEN-END:variables

    private void ucitajKlijente() {
        cmbKlijent.removeAllItems();
        
        KlijentskiZahtev kz = new KlijentskiZahtev(Konstante.VRATI_KLIJENTE, null);
        KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);
         ArrayList<Klijent> listaKlijenata = (ArrayList<Klijent>) KomunikacijaSaServerom.getInstance().primiOdgovor().getOdgovor();
        
        for (Klijent klijent : listaKlijenata) {
            cmbKlijent.addItem(klijent);
        }
    }

    

    private void ucitajVrstePostupka() {
        cmbVrstaPostupka.removeAllItems();
        
        KlijentskiZahtev kz = new KlijentskiZahtev(Konstante.VRATI_VRSTE, null);
        KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);
         ArrayList<VrstaPostupka> listaVrsti = (ArrayList<VrstaPostupka>) KomunikacijaSaServerom.getInstance().primiOdgovor().getOdgovor();
        
        for (VrstaPostupka vrsta : listaVrsti) {
            cmbVrstaPostupka.addItem(vrsta);
        }
    }

    private void ucitajAdvokate() {
        cmbAdvokat.removeAllItems();
        
        KlijentskiZahtev kz = new KlijentskiZahtev(Konstante.VRATI_ADVOKATE, null);
        KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);
        ArrayList<Advokat> listaAdvokata = (ArrayList<Advokat>) KomunikacijaSaServerom.getInstance().primiOdgovor().getOdgovor();
        
        for (Advokat advokat : listaAdvokata) {
            cmbAdvokat.addItem(advokat);
            
        }
        
    }

    private void srediTabelu() {
        ModelTabelePredmeti mtp = new ModelTabelePredmeti();
        tblPredmeti.setModel(mtp);
    }
}
