/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Gazdinstvo;
import domen.Stado;
import domen.Zivotinja;
import java.util.ArrayList;
import kontroler.Kontroler;
import modeli.ModelTabeleGazdinstvo;
import niti.OsveziNit;
import niti.PokreniServerNit;
import pomocna.PomocnaKlasa;

/**
 *
 * @author Gogic
 */
public class GlavnaServerskaForma extends javax.swing.JFrame {

    /**
     * Creates new form GlavnaServerskaForma
     */
    public GlavnaServerskaForma() {
        initComponents();
        this.setLocationRelativeTo(null);
        pokreniServer();
        srediDugme();
        srediTabelu();
        OsveziNit on = new OsveziNit(this);
        on.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chkFilter = new javax.swing.JCheckBox();
        cmbZivotinja = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGazdinstvo = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        chkFilter.setText("Filter po vrsti zivotinje");

        cmbZivotinja.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tblGazdinstvo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblGazdinstvo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chkFilter)
                        .addGap(18, 18, 18)
                        .addComponent(cmbZivotinja, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkFilter)
                    .addComponent(cmbZivotinja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GlavnaServerskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GlavnaServerskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GlavnaServerskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GlavnaServerskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GlavnaServerskaForma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkFilter;
    private javax.swing.JComboBox cmbZivotinja;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblGazdinstvo;
    // End of variables declaration//GEN-END:variables

    private void pokreniServer() {
        PokreniServerNit psn = new PokreniServerNit();
        psn.start();
    }

    private void srediTabelu() {
        ModelTabeleGazdinstvo mtg = new ModelTabeleGazdinstvo();
        tblGazdinstvo.setModel(mtg);
        ArrayList<PomocnaKlasa> listaPK = new ArrayList<>();
        
        ArrayList<Gazdinstvo> listaGazdinstva = Kontroler.getInstance().vratiListuGazdinstva();
        for (Gazdinstvo gazdinstvo : listaGazdinstva) {
            int gazID = gazdinstvo.getGazdinstvoID();
            ArrayList<Stado> listaStada = Kontroler.getInstance().vratiListuStada(gazID);
            PomocnaKlasa pk = new PomocnaKlasa(gazdinstvo, listaStada);
            listaPK.add(pk);
        }
        
        mtg.setListaPomocne(listaPK);
    }

    private void srediDugme() {
        cmbZivotinja.removeAllItems();
        ArrayList<Zivotinja> listaZiv = Kontroler.getInstance().vratiSveZivotinje();
        for (Zivotinja zivotinja : listaZiv) {
            cmbZivotinja.addItem(zivotinja);
        }
    }

    public void filtriraj() {
        ModelTabeleGazdinstvo mtg = (ModelTabeleGazdinstvo) tblGazdinstvo.getModel();
        ArrayList<PomocnaKlasa> listaPK = new ArrayList<>();
        
        ArrayList<Gazdinstvo> listaGazdinstva = Kontroler.getInstance().vratiListuGazdinstva();
        for (Gazdinstvo gazdinstvo : listaGazdinstva) {
            int gazID = gazdinstvo.getGazdinstvoID();
            ArrayList<Stado> listaStada = Kontroler.getInstance().vratiListuStada(gazID);
            PomocnaKlasa pk = new PomocnaKlasa(gazdinstvo, listaStada);
            listaPK.add(pk);
        }
        
        if(chkFilter.isSelected()){
            Zivotinja ziv = (Zivotinja) cmbZivotinja.getSelectedItem();
            ArrayList<PomocnaKlasa> filterLista = new ArrayList<>();
            for(PomocnaKlasa pk : listaPK){
                ArrayList<Stado> listaStada = pk.getListaStada();
                for (Stado stado : listaStada) {
                    if(stado.getZivotinja().equals(ziv)){
                        filterLista.add(pk);
                    }
                }
                   
                
            }
            mtg.setListaPomocne(filterLista);
        }else{
        
        mtg.setListaPomocne(listaPK);
        }
    }
}
