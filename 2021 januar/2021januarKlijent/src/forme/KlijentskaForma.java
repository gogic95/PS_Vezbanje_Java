/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Paket;
import domen.Pretplatnik;
import domen.Ugovor;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import kom.Komunikacija;
import kons.Konstante;
import modeli.ModelTabeleUgovori;
import transferObjekat.KlijentskiZahtev;

/**
 *
 * @author Gogic
 */
public class KlijentskaForma extends javax.swing.JFrame {

    /**
     * Creates new form KlijentskaForma
     */
    public KlijentskaForma() {
        initComponents();
        srediCombo();
        srediTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUgovori = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        btnSacuvaj = new javax.swing.JButton();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        cmbPretplatnik = new javax.swing.JComboBox();
        cmbPaket = new javax.swing.JComboBox();
        cmbVrstaUgovora = new javax.swing.JComboBox();
        txtDatumEvidentiranja = new javax.swing.JTextField();
        rbnDa = new javax.swing.JRadioButton();
        rbnNe = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Klijentska forma");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Unos ugovora"));

        jLabel2.setText("Pretplatnik");

        jLabel3.setText("Paket");

        jLabel4.setText("Vrsta ugovora");

        jLabel5.setText("Datum evidentiranja");

        tblUgovori.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblUgovori);

        jLabel6.setText("Dodatne usluge");

        btnSacuvaj.setText("Sacuvaj ugovore");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnDodaj.setText("Dodaj ugovor");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi ugovor");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        cmbPretplatnik.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbPaket.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbVrstaUgovora.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buttonGroup1.add(rbnDa);
        rbnDa.setSelected(true);
        rbnDa.setText("Da");

        buttonGroup1.add(rbnNe);
        rbnNe.setText("Ne");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 856, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(38, 38, 38)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rbnDa)
                                        .addGap(27, 27, 27)
                                        .addComponent(rbnNe)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(cmbPretplatnik, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbPaket, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbVrstaUgovora, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtDatumEvidentiranja)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(117, 117, 117)
                                .addComponent(btnSacuvaj))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnDodaj)
                                .addGap(77, 77, 77)
                                .addComponent(btnObrisi)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbPretplatnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbPaket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbVrstaUgovora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDatumEvidentiranja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(rbnDa)
                    .addComponent(rbnNe))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnObrisi))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(btnSacuvaj)
                .addContainerGap())
        );

        jLabel1.setText("FON");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(44, 44, 44)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        ModelTabeleUgovori mti  = (ModelTabeleUgovori) tblUgovori.getModel();
        
        if(tblUgovori.getSelectedRow() != -1){
            mti.obrisiIzTabele(tblUgovori.getSelectedRow());
        }else{
        
        JOptionPane.showMessageDialog(this, "morate odabrati ugovor");
        return;
        }
        
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        try {
            String datum = txtDatumEvidentiranja.getText();
            if(datum.isEmpty()){
                JOptionPane.showMessageDialog(this, "Niste popunili datum");
                return;
            }
            Ugovor u = new Ugovor();
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
            Date datumm = sdf.parse(datum);
            u.setUgovorID(1l);
            u.setDatumEvidentiranja(datumm);
            u.setVrstaUgovora((String) cmbVrstaUgovora.getSelectedItem());
            
            u.setDodatneUsluge(rbnDa.isSelected());
            
            Paket p = (Paket) cmbPaket.getSelectedItem();
            if(!p.isAktivan()){
                JOptionPane.showMessageDialog(this, "Paket nije aktivan");
                return;
            }
            
            
            
            double OsnovnaCena = p.getCena();
            double cena1 = 0;
            double cena2 = 0;
            if(rbnDa.isSelected()){
                cena1 = OsnovnaCena*0.1;
            }
            if(cmbVrstaUgovora.getSelectedItem().equals("Bez ugovorne obaveze")){
                cena2 = OsnovnaCena*0.1;
            }
            OsnovnaCena += cena1 + cena2;
            u.setCena(OsnovnaCena);
            u.setPaket((Paket) cmbPaket.getSelectedItem());
            u.setPretplatnik((Pretplatnik) cmbPretplatnik.getSelectedItem());
            
            ModelTabeleUgovori mtu = (ModelTabeleUgovori) tblUgovori.getModel();
            ArrayList<Ugovor> lista = mtu.getListaUgovora();
            
            for (Ugovor ugovor : lista) {
                if(ugovor.getPretplatnik().equals(cmbPretplatnik.getSelectedItem())){
                    JOptionPane.showMessageDialog(this, "Pretplatnik vec ima ugovor");
                return;
                }
            }
            
            mtu.dodajUTabelu(u);
            
        } catch (ParseException ex) {
            Logger.getLogger(KlijentskaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        ModelTabeleUgovori mtu = (ModelTabeleUgovori) tblUgovori.getModel();
        ArrayList<Ugovor> lista = mtu.getListaUgovora();
        
        if(lista.isEmpty()){
             JOptionPane.showMessageDialog(this, "Niste uneli nijedan ugovor");
                return;
        }
        
        KlijentskiZahtev kz = new KlijentskiZahtev(Konstante.SACUVAJ_UGOVORE, lista);
        Komunikacija.getInstance().posaljiZahtev(kz);
        
        boolean signal = (boolean) Komunikacija.getInstance().primiOdgovor().getOdgovor();
        
        if(signal){
             JOptionPane.showMessageDialog(this, "Uspesno sacuvano");
             mtu.resetujTabelu();
             return;
        }else{
             JOptionPane.showMessageDialog(this, "NEUSPESNO SACUVANO");
                return;
        }
        
        
    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KlijentskaForma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbPaket;
    private javax.swing.JComboBox cmbPretplatnik;
    private javax.swing.JComboBox cmbVrstaUgovora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbnDa;
    private javax.swing.JRadioButton rbnNe;
    private javax.swing.JTable tblUgovori;
    private javax.swing.JTextField txtDatumEvidentiranja;
    // End of variables declaration//GEN-END:variables

    private void srediCombo() {
        cmbVrstaUgovora.removeAllItems();
        
        cmbVrstaUgovora.addItem("Bez ugovorne obaveze");
        cmbVrstaUgovora.addItem("Ugovor na 12 meseci");
        cmbVrstaUgovora.addItem("Ugovor na 24 meseca");
        
        srediPakete();
        srediPretplatnike();
    }

    private void srediPakete() {
       cmbPaket.removeAllItems();
        KlijentskiZahtev kz = new KlijentskiZahtev(Konstante.VRATI_PAKETE, null);
        Komunikacija.getInstance().posaljiZahtev(kz);
        
        ArrayList<Paket> lista = (ArrayList<Paket>) Komunikacija.getInstance().primiOdgovor().getOdgovor();
        for (Paket paket : lista) {
            cmbPaket.addItem(paket);
        }
       
    }

    private void srediPretplatnike() {
        cmbPretplatnik.removeAllItems();
        KlijentskiZahtev kz = new KlijentskiZahtev(Konstante.VRATI_PRETPLATNIKE, null);
        Komunikacija.getInstance().posaljiZahtev(kz);
        
        ArrayList<Pretplatnik> listaP = (ArrayList<Pretplatnik>) Komunikacija.getInstance().primiOdgovor().getOdgovor();
        for (Pretplatnik pretplatnik : listaP) {
            cmbPretplatnik.addItem(pretplatnik);
        }
    }

    private void srediTabelu() {
        ModelTabeleUgovori mtu = new ModelTabeleUgovori();
        tblUgovori.setModel(mtu);
    }
}
