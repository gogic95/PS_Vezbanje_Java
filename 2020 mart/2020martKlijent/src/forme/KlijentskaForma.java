/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Izdanje;
import domen.Publikacija;
import domen.Vest;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.KomunikacijaSaServerom;
import kons.Konstante;
import modeli.ModelTabeleVesti;
import transferObjekat.KlijentskiZahtev;

/**
 *
 * @author Gogic
 */
public class KlijentskaForma extends javax.swing.JFrame {

    /**
     * Creates new form KlijentskaForma
     */
    public KlijentskaForma() {
        initComponents();
        srediFormu();
        srediTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbPublikacija = new javax.swing.JComboBox();
        txtBroj = new javax.swing.JTextField();
        txtDatum = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVest = new javax.swing.JTable();
        btnSacuvaj = new javax.swing.JButton();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("klijentska forma");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Unos izdanja"));

        jLabel1.setText("Publikacija:");

        jLabel2.setText("Broj:");

        jLabel3.setText("Datum:");

        cmbPublikacija.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tblVest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblVest);

        btnSacuvaj.setText("Sacuvaj izdanje");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnDodaj.setText("Dodaj vest");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi vest");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(66, 66, 66)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbPublikacija, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtBroj)
                    .addComponent(txtDatum))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(btnSacuvaj)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(btnDodaj)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnObrisi)
                .addGap(114, 114, 114))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbPublikacija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtBroj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnObrisi))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnSacuvaj)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
       ModelTabeleVesti mtv = (ModelTabeleVesti) tblVest.getModel();
       mtv.obrisiIzTabele(tblVest.getSelectedRow());
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        Izdanje iz = new Izdanje();
        iz.setPublikacija((Publikacija) cmbPublikacija.getSelectedItem());
        Vest v = new Vest(iz, 0, "", "");
        DodajVestForma dvf = new DodajVestForma(this, true, v);
        dvf.setVisible(true);
        ModelTabeleVesti mtv = (ModelTabeleVesti) tblVest.getModel();
        mtv.dodajUTabelu(v);
        
        cmbPublikacija.setEnabled(false);
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        if(txtBroj.getText().isEmpty() || txtDatum.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "sva polja moraju biti popunjena");
            return;
        }
        ModelTabeleVesti mtv = (ModelTabeleVesti) tblVest.getModel();
        ArrayList<Vest> listaVesti = mtv.getListaVesti();
        if(listaVesti.isEmpty()){
            JOptionPane.showMessageDialog(this, "Mora postojati bar jedna vest");
            return;
        }
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        try {
            Izdanje iz = new Izdanje(1, sdf.parse(txtDatum.getText()), Integer.parseInt(txtBroj.getText()), (Publikacija) cmbPublikacija.getSelectedItem());
            
            
            KlijentskiZahtev kz = new KlijentskiZahtev(Konstante.VRATI_IZDANJA,iz);
            KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);
            ArrayList<Izdanje> listaIzdanja = (ArrayList<Izdanje>) KomunikacijaSaServerom.getInstance().primiOdgovor().getOdgovor();
            for (Izdanje izdanje : listaIzdanja) {
                if(iz.getPublikacija().equals(izdanje.getPublikacija()) && iz.getBroj() == izdanje.getBroj()){
                    JOptionPane.showMessageDialog(this, "Nije sacuvano izdanje vec postoji(broj)");
                    return;
                }
                if(iz.getPublikacija().equals(izdanje.getPublikacija()) && iz.getDatum().equals(izdanje.getDatum())){
                    JOptionPane.showMessageDialog(this, "Nije sacuvano izdanje vec postoji(datum)");
                    return;
                }
            }
            
            
            
            for (Vest vest : listaVesti) {
                vest.setIzdanje(iz);
            }
            
            KlijentskiZahtev kz1 = new KlijentskiZahtev(Konstante.SACUVAJ_IZDANJE,listaVesti);
            KomunikacijaSaServerom.getInstance().posaljiZahtev(kz1);
            
            boolean signal = (boolean) KomunikacijaSaServerom.getInstance().primiOdgovor().getOdgovor();
            if(signal){
                JOptionPane.showMessageDialog(this, "Uspesno sacuvano sve");
                mtv.resetuj();
                cmbPublikacija.setEnabled(true);
                return;
            }else{
                 JOptionPane.showMessageDialog(this, "NEUSPESNO sacuvano");
                 return;
            }
            
        } catch (ParseException ex) {
            System.out.println("Los datum");
            Logger.getLogger(KlijentskaForma.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
        
        
    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KlijentskaForma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cmbPublikacija;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblVest;
    private javax.swing.JTextField txtBroj;
    private javax.swing.JTextField txtDatum;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        cmbPublikacija.removeAllItems();
        
        KlijentskiZahtev kz = new KlijentskiZahtev(Konstante.VRATI_PUBLIKACIJE, null);
        KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);
        
        ArrayList<Publikacija> lista = (ArrayList<Publikacija>) KomunikacijaSaServerom.getInstance().primiOdgovor().getOdgovor();
        
        for (Publikacija publikacija : lista) {
            cmbPublikacija.addItem(publikacija);
        }
    }

    private void srediTabelu() {
        ModelTabeleVesti mtv = new ModelTabeleVesti();
        tblVest.setModel(mtv);
    }
}
