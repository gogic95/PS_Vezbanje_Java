/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Intervju;
import domen.Kandidat;
import domen.Regruter;
import java.awt.HeadlessException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.KomunikacijaSaServerom;
import konstante.Konstante;
import modeli.ModelTabeleIntervju;
import transferObjekat.KlijentskiZahtev;

/**
 *
 * @author Gogic
 */
public class GlavnaKlijentskaForma extends javax.swing.JFrame {
    Regruter regruter;
    /**
     * Creates new form GlavnaKlijentskaForma
     */
    public GlavnaKlijentskaForma() {
        initComponents();
        srediBoksove();
                srediTabelu();
    }

    public GlavnaKlijentskaForma(Regruter regruter) throws HeadlessException {
        this.regruter = regruter;
        initComponents();
        srediBoksove();
        srediTabelu();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVozacka = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cmbKandidat = new javax.swing.JComboBox();
        txtDatum = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtOpis = new javax.swing.JTextArea();
        txtBrojPoena = new javax.swing.JTextField();
        cmbVozacka = new javax.swing.JComboBox();
        rbnDa = new javax.swing.JRadioButton();
        rbnNe = new javax.swing.JRadioButton();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Klijentska forma");

        jLabel1.setText("Kandidat:");

        tblVozacka.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblVozacka);

        jLabel2.setText("Datum:");

        jLabel3.setText("Opis:");

        jLabel4.setText("Broj poena:");

        jLabel5.setText("Vozacka dozvola:");

        jLabel6.setText("Prethodno iskustvo:");

        cmbKandidat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtOpis.setColumns(20);
        txtOpis.setRows(5);
        jScrollPane2.setViewportView(txtOpis);

        cmbVozacka.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buttonGroup1.add(rbnDa);
        rbnDa.setSelected(true);
        rbnDa.setText("Da");

        buttonGroup1.add(rbnNe);
        rbnNe.setText("Ne");

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(138, 138, 138)
                        .addComponent(txtDatum))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(126, 126, 126)
                        .addComponent(cmbKandidat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbnDa)
                                .addGap(18, 18, 18)
                                .addComponent(rbnNe)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2)
                            .addComponent(txtBrojPoena)
                            .addComponent(cmbVozacka, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDodaj)
                        .addGap(30, 30, 30)
                        .addComponent(btnObrisi)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(btnSacuvaj)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbKandidat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtBrojPoena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbVozacka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbnDa)
                    .addComponent(jLabel6)
                    .addComponent(rbnNe))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnObrisi))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnSacuvaj)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        if(txtDatum.getText().isEmpty() || txtBrojPoena.getText().isEmpty() || txtOpis.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "sva polja moraju biti popunjena");
            return;
        }
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        Date datum;
        try {
            datum = sdf.parse(txtDatum.getText());
        } catch (ParseException ex) {
            System.out.println("Neispravan datum");
            Logger.getLogger(GlavnaKlijentskaForma.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
        String opis = txtOpis.getText();
        Kandidat k = (Kandidat) cmbKandidat.getSelectedItem();
        double brojPoena = Double.parseDouble(txtBrojPoena.getText());
        if(brojPoena < 0 || brojPoena > 100){
            JOptionPane.showMessageDialog(this, "Poeni moraju biti u rangu od 0 do 100");
            return;
        }
        String vozacka = (String) cmbVozacka.getSelectedItem();
        boolean iskustvo = rbnDa.isSelected();
        
        Intervju i = new Intervju(1, datum, opis, brojPoena, vozacka, iskustvo, k, this.regruter);
        ModelTabeleIntervju mti = (ModelTabeleIntervju) tblVozacka.getModel();
        
        ArrayList<Intervju> listaIn = mti.getListaI();
        for (Intervju intervju : listaIn) {
            if(intervju.getKandidat().equals(i.getKandidat()) && intervju.getDatum().equals(i.getDatum())){
                JOptionPane.showMessageDialog(this, "Kandidat moze biti intervjuisan samo jednom dnevno");
                return;
            }
        }
        
        mti.dodajUListu(i);
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        ModelTabeleIntervju mti = (ModelTabeleIntervju) tblVozacka.getModel();
        mti.obrisiIzListe(tblVozacka.getSelectedRow());
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        ModelTabeleIntervju mti = (ModelTabeleIntervju) tblVozacka.getModel();
        if(mti.getListaI().isEmpty()){
           JOptionPane.showMessageDialog(this, "Mora biti bar jedan intervju");
           return;
        }
        
        ArrayList<Intervju> lista = mti.getListaI();
        KlijentskiZahtev kz = new KlijentskiZahtev(Konstante.SACUVAJ_INTERVJU, lista);
        KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);
        
        boolean signal = (boolean) KomunikacijaSaServerom.getInstance().primiOdgovor().getOdgovor();
        if(signal){
            JOptionPane.showMessageDialog(this, "Uspesno sacuvano");
            mti.resetuj();
           
        }else{
            JOptionPane.showMessageDialog(this, "NEUSPESNO SACUVANO");
           
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GlavnaKlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GlavnaKlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GlavnaKlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GlavnaKlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GlavnaKlijentskaForma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbKandidat;
    private javax.swing.JComboBox cmbVozacka;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rbnDa;
    private javax.swing.JRadioButton rbnNe;
    private javax.swing.JTable tblVozacka;
    private javax.swing.JTextField txtBrojPoena;
    private javax.swing.JTextField txtDatum;
    private javax.swing.JTextArea txtOpis;
    // End of variables declaration//GEN-END:variables

    private void srediBoksove() {
        cmbKandidat.removeAllItems();
        cmbVozacka.removeAllItems();
        cmbVozacka.addItem("Nema");
        cmbVozacka.addItem("A");
        cmbVozacka.addItem("B");
        cmbVozacka.addItem("C");
        cmbVozacka.addItem("D");
        
        KlijentskiZahtev kz = new KlijentskiZahtev(Konstante.VRATI_KANDIDATE, null);
        KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);
        ArrayList<Kandidat> listaKan = (ArrayList<Kandidat>) KomunikacijaSaServerom.getInstance().primiOdgovor().getOdgovor();
        for (Kandidat kandidat : listaKan) {
            cmbKandidat.addItem(kandidat);
        }
    }

    private void srediTabelu() {
        ModelTabeleIntervju mti = new ModelTabeleIntervju();
        tblVozacka.setModel(mti);
    }
}
