/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Predmet;
import domen.Sud;
import domen.TipSpora;
import java.util.ArrayList;
import kontroler.Kontroler;
import modeli.ModelTabelePredmeti;
import niti.OsveziNit;
import niti.PokreniServerNit;
import pomoc.PomocnaKlasa;

/**
 *
 * @author Gogic
 */
public class ServerskaForma extends javax.swing.JFrame {

    /**
     * Creates new form ServerskaForma
     */
    public ServerskaForma() {
        initComponents();
        PokreniServerNit psn = new PokreniServerNit();
        psn.start();
        srediFormu();
        srediTabelu();
        OsveziNit on = new OsveziNit(this);
        on.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        chkSud = new javax.swing.JCheckBox();
        ChkTipSpora = new javax.swing.JCheckBox();
        cmbSud = new javax.swing.JComboBox();
        cmbTipSpora = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblIzvestaj = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Server Forma");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Izvestaj"));

        chkSud.setText("Sud");

        ChkTipSpora.setText("Tip spora");

        cmbSud.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbTipSpora.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tblIzvestaj.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblIzvestaj);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ChkTipSpora)
                    .addComponent(chkSud))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbSud, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbTipSpora, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(chkSud)
                    .addComponent(cmbSud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ChkTipSpora)
                    .addComponent(cmbTipSpora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerskaForma().setVisible(true);
            }
        });
    }

    public void srediTabelu() {
        ModelTabelePredmeti mtp = new ModelTabelePredmeti();
        
        
        ArrayList<Predmet> lista = Kontroler.getInstance().vratiPredmete();
        ArrayList<PomocnaKlasa> listaPK = new ArrayList<>();
        
        for (Predmet predmet : lista) {
            PomocnaKlasa pk = new PomocnaKlasa(predmet.getSud(), predmet.getTipSpora(), 1);
            if(listaPK.contains(pk)){
             pk.setBrojPredmeta(pk.getBrojPredmeta()+1);
                for (PomocnaKlasa pomocnaKlasa : listaPK) {
                    if(pomocnaKlasa.equals(pk)){
                        pomocnaKlasa.setBrojPredmeta(pomocnaKlasa.getBrojPredmeta()+1);
                    }
                }
             
             
             
             
            }else{
            pk.setBrojPredmeta(1);
            listaPK.add(pk);
            }
        }
        mtp.setLista(listaPK);
        tblIzvestaj.setModel(mtp);
        
        if(chkSud.isSelected() || ChkTipSpora.isSelected()){
            ArrayList<PomocnaKlasa> filterLista = new ArrayList<>();
            if(chkSud.isSelected()){
                for (PomocnaKlasa pomocnaKlasa : listaPK) {
                    if(pomocnaKlasa.getSud().equals(cmbSud.getSelectedItem())){
                        filterLista.add(pomocnaKlasa);
                    }
                }
            }
            
            if(ChkTipSpora.isSelected()){
                for (PomocnaKlasa pomocnaKlasa : listaPK) {
                    if(pomocnaKlasa.getTipSpora().equals(cmbTipSpora.getSelectedItem())){
                        filterLista.add(pomocnaKlasa);
                    }
                }
            }
            mtp.setLista(filterLista);
        }
        
        if(chkSud.isSelected() && ChkTipSpora.isSelected()){
            ArrayList<PomocnaKlasa> filterLista2 = new ArrayList<>();
            for (PomocnaKlasa pomocnaKlasa : listaPK) {
                    if(pomocnaKlasa.getTipSpora().equals(cmbTipSpora.getSelectedItem())&&pomocnaKlasa.getSud().equals(cmbSud.getSelectedItem())){
                        filterLista2.add(pomocnaKlasa);
                    }
                }
            
            mtp.setLista(filterLista2);
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ChkTipSpora;
    private javax.swing.JCheckBox chkSud;
    private javax.swing.JComboBox cmbSud;
    private javax.swing.JComboBox cmbTipSpora;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblIzvestaj;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        cmbSud.removeAllItems();
        cmbTipSpora.removeAllItems();
        
        ArrayList<Sud> listaSudova = (ArrayList<Sud>) Kontroler.getInstance().vratiSudove();
        
        for (Sud sud : listaSudova) {
            cmbSud.addItem(sud);
        }
        
        ArrayList<TipSpora> listaTS = (ArrayList<TipSpora>)Kontroler.getInstance().vratiTipoveSporova();
        
        for (TipSpora tip : listaTS) {
            cmbTipSpora.addItem(tip);
        }
    }
}
