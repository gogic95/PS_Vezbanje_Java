/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Linija;
import domen.LinijaStanica;
import domen.Stanica;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import komunikacija.KomunikacijSaServerom;
import modeli.ModelTabeleMedjustanica;
import operacije.Konstante;
import transferObjekat.KlijentskiZahtev;
import transferObjekat.ServerskiOdgovor;

/**
 *
 * @author Gogic
 */
public class KlijentskaForma extends javax.swing.JFrame {

    /**
     * Creates new form KlijentskaForma
     */
    public KlijentskaForma() {
        initComponents();
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbPocetna = new javax.swing.JComboBox();
        cmbKrajnja = new javax.swing.JComboBox();
        cmbMedjustanice = new javax.swing.JComboBox();
        txtNaziv = new javax.swing.JTextField();
        btnDodajMedju = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMedjustanice = new javax.swing.JTable();
        btnSacuvajLiniju = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Klijentska forma");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Unos linije"));

        jLabel1.setText("Naziv linije:");

        jLabel2.setText("Krajnja stanica:");

        jLabel3.setText("Pocetna stanica:");

        jLabel4.setText("Medjustanice:");

        cmbPocetna.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbKrajnja.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbMedjustanice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnDodajMedju.setText("Dodaj medjustanicu");
        btnDodajMedju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajMedjuActionPerformed(evt);
            }
        });

        tblMedjustanice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblMedjustanice);

        btnSacuvajLiniju.setText("Sacuvaj liniju");
        btnSacuvajLiniju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajLinijuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbPocetna, 0, 600, Short.MAX_VALUE)
                            .addComponent(cmbKrajnja, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbMedjustanice, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(38, 38, 38)
                        .addComponent(txtNaziv))
                    .addComponent(btnDodajMedju)
                    .addComponent(btnSacuvajLiniju))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbPocetna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbKrajnja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMedjustanice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(btnDodajMedju)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSacuvajLiniju)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajMedjuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajMedjuActionPerformed
        if(cmbKrajnja.getSelectedItem().equals(cmbPocetna.getSelectedItem())){
            JOptionPane.showMessageDialog(this, "Pocetna i krajnja stanica moraju da se razlikuju");
            return;
        }
        
        if(cmbKrajnja.getSelectedItem().equals(cmbMedjustanice.getSelectedItem()) || cmbPocetna.getSelectedItem().equals(cmbMedjustanice.getSelectedItem())){
            JOptionPane.showMessageDialog(this, "Medjustanica ne moze biti ista kao pocetna ili krajnja stanica");
            return;
        }
        
        Stanica stanica = (Stanica) cmbMedjustanice.getSelectedItem();
        
        ModelTabeleMedjustanica mtm = (ModelTabeleMedjustanica) tblMedjustanice.getModel();
        
        ArrayList<Stanica> lista = mtm.getListaStanica();
        if(lista.contains(stanica)) {
            JOptionPane.showMessageDialog(this, "Medjustanica vec postoji");
            return;
        }
        
        mtm.dodajUListu(stanica);
        
        txtNaziv.setText(cmbPocetna.getSelectedItem().toString()+"-"+cmbKrajnja.getSelectedItem().toString());
        
        cmbKrajnja.setEnabled(false);
        cmbPocetna.setEnabled(false);
    }//GEN-LAST:event_btnDodajMedjuActionPerformed

    private void btnSacuvajLinijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajLinijuActionPerformed
        ModelTabeleMedjustanica mtm = (ModelTabeleMedjustanica) tblMedjustanice.getModel();
        ArrayList<Stanica> listaMedju = mtm.getListaStanica();
        ArrayList<LinijaStanica> listaLinStan = new ArrayList<>();
        if(listaMedju.isEmpty()){
            JOptionPane.showMessageDialog(this, "Mora postojati bar jedna medjustanica");
            return;
        }
        int id = vratiID();
        Linija linija = new Linija();
        linija.setLinijaID(id);
        linija.setNazivLinije(txtNaziv.getText());
        linija.setKrajnjaStanica((Stanica) cmbKrajnja.getSelectedItem());
        linija.setPocetnaStanica((Stanica) cmbPocetna.getSelectedItem());
        
        for (Stanica stanica : listaMedju) {
            LinijaStanica lin = new LinijaStanica(linija, stanica);
            listaLinStan.add(lin);
        }
        linija.setListaMedjustanica(listaLinStan);
        
        ArrayList<Linija> testLinija = KomunikacijSaServerom.getInstance().vratiSveLinije();
        for (Linija linija1 : testLinija) {
            if(linija1.getPocetnaStanica().equals(linija.getPocetnaStanica()) && linija1.getKrajnjaStanica().equals(linija.getKrajnjaStanica())){
                if(linija1.getListaMedjustanica().equals(linija.getListaMedjustanica())){
                    JOptionPane.showMessageDialog(this, "Vec postoji ovo");
                    return;
                }
            }
        }
        
        KlijentskiZahtev kz = new KlijentskiZahtev(Konstante.SACUVAJ_LINIJU, linija);
       
        KomunikacijSaServerom.getInstance().postaljiZahtev(kz);
         System.out.println("Stigao");
        ServerskiOdgovor so = KomunikacijSaServerom.getInstance().primiOdgovor();
         System.out.println("Stigao2");
        if(so.getPoruka().equalsIgnoreCase("neuspesno")){
            JOptionPane.showMessageDialog(this, "Neuspesno cuvanje");
            return;
        }
        JOptionPane.showMessageDialog(this, "USPESNO");
        
        
        mtm.osveziNakonCuvanja();
        cmbKrajnja.setEnabled(true);
        cmbPocetna.setEnabled(true);
    }//GEN-LAST:event_btnSacuvajLinijuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KlijentskaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KlijentskaForma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajMedju;
    private javax.swing.JButton btnSacuvajLiniju;
    private javax.swing.JComboBox cmbKrajnja;
    private javax.swing.JComboBox cmbMedjustanice;
    private javax.swing.JComboBox cmbPocetna;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMedjustanice;
    private javax.swing.JTextField txtNaziv;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        cmbPocetna.removeAllItems();
        cmbKrajnja.removeAllItems();
        cmbMedjustanice.removeAllItems();
        KlijentskiZahtev kz = new KlijentskiZahtev(Konstante.VRATI_SVE_STANICE, null);
        KomunikacijSaServerom.getInstance().postaljiZahtev(kz);
        ArrayList<Stanica> listaStanica = (ArrayList<Stanica>) KomunikacijSaServerom.getInstance().primiOdgovor().getOdgovor();
        
        for (Stanica stanica : listaStanica) {
            cmbPocetna.addItem(stanica);
            cmbKrajnja.addItem(stanica);
            cmbMedjustanice.addItem(stanica);
        }
        
        ModelTabeleMedjustanica mtm = new ModelTabeleMedjustanica();
        tblMedjustanice.setModel(mtm);
    }

    private int vratiID() {
        KlijentskiZahtev kz = new KlijentskiZahtev(Konstante.VRATI_ID, null);
        KomunikacijSaServerom.getInstance().postaljiZahtev(kz);
        int id = (int) KomunikacijSaServerom.getInstance().primiOdgovor().getOdgovor();
        return id;
    }

    
}
